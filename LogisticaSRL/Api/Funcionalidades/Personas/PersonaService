using System;
using System.Threading.Tasks;
using LogisticaSRL.Persistencia;
using LogisticaSRL.Dominio;
namespace Api.Funcionalidades{
public class PersonaService
{
    private readonly DbContext _context;

    public PersonaService(DbContext context)
    {
        _context = context;
    }

    public async Task<PersonaQueryDto> CreatePersonaAsync(PersonaCommandDto personaDto)
    {
        var persona = new Persona
        {
            Id = personaDto.Id,
            TipoDNIId = personaDto.TipoDNIId,
            DomicilioId = personaDto.DomicilioId,
            DNI = personaDto.DNI,
            PaisResidente = personaDto.PaisResidente,
            Nombre = personaDto.Nombre,
            Apellido = personaDto.Apellido
        };

        _context.Personas.Add(persona);
        await _context.SaveChangesAsync();

        return new PersonaQueryDto
        {
            Id = persona.Id,
            TipoDNIId = persona.TipoDNIId,
            DomicilioId = persona.DomicilioId,
            DNI = persona.DNI,
            PaisResidente = persona.PaisResidente,
            Nombre = persona.Nombre,
            Apellido = persona.Apellido
        };
    }

    public async Task<PersonaQueryDto> UpdatePersonaAsync(Guid id, PersonaCommandDto personaDto)
    {
        var persona = await _context.Personas.FindAsync(id);
        if (persona == null) return null;

        persona.TipoDNIId = personaDto.TipoDNIId;
        persona.DomicilioId = personaDto.DomicilioId;
        persona.DNI = personaDto.DNI;
        persona.PaisResidente = personaDto.PaisResidente;
        persona.Nombre = personaDto.Nombre;
        persona.Apellido = personaDto.Apellido;

        await _context.SaveChangesAsync();

        return new PersonaQueryDto
        {
            Id = persona.Id,
            TipoDNIId = persona.TipoDNIId,
            DomicilioId = persona.DomicilioId,
            DNI = persona.DNI,
            PaisResidente = persona.PaisResidente,
            Nombre = persona.Nombre,
            Apellido = persona.Apellido
        };
    }
} 
}
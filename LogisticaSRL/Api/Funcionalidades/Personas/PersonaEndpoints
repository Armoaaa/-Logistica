using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using LogisticaSRL.Persistencia;
using LogisticaSRL.Dominio;

namespace Api.Funcionalidades
{
    public class PersonaEndpoints
    {
        private readonly PersonaService _personaService;

        public PersonaEndpoints(PersonaService personaService)
        {
            _personaService = personaService;
        }

        public async Task<IActionResult> CreatePersona(HttpContext context)
        {
            var personaDto = await context.Request.ReadFromJsonAsync<PersonaCommandDto>();
            var result = await _personaService.CreatePersonaAsync(personaDto);
            return new CreatedAtActionResult(nameof(GetPersonaById), "Persona", new { id = result.Id }, result);
        }

        public async Task<IActionResult> UpdatePersona(HttpContext context, Guid id)
        {
            var personaDto = await context.Request.ReadFromJsonAsync<PersonaCommandDto>();
            var result = await _personaService.UpdatePersonaAsync(id, personaDto);
            if (result == null) return new NotFoundResult();

            return new OkObjectResult(result);
        }

        public async Task<IActionResult> DeletePersona(HttpContext context, Guid id)
        {
            var success = await _personaService.DeletePersonaAsync(id);
            if (!success) return new NotFoundResult();

            return new NoContentResult();
        }

        public async Task<IActionResult> GetPersonaById(HttpContext context, Guid id)
        {
            var result = await _personaService.GetPersonaByIdAsync(id);
            if (result == null) return new NotFoundResult();

            return new OkObjectResult(result);
        }
    }
} 
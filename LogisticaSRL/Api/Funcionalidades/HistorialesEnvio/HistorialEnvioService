using System;
using System.Threading.Tasks;
using LogisticaSRL.Persistencia;
using LogisticaSRL.Dominio;
namespace Api.Funcionalidades{
public class HistorialEnvioService
{
    private readonly DbContext _context;

    public HistorialEnvioService(DbContext context)
    {
        _context = context;
    }

    public async Task<HistorialEnvioQueryDto> CreateHistorialEnvioAsync(HistorialEnvioCommandDto historialDto)
    {
        var historial = new HistorialEnvio
        {
            Id = historialDto.Id,
            NumeroSeguimiento = historialDto.NumeroSeguimiento,
            SucursalId = historialDto.SucursalId,
            EstadoEnvio = historialDto.EstadoEnvio,
            FechaCambio = historialDto.FechaCambio,
            FechaCreacion = historialDto.FechaCreacion
        };

        _context.HistorialesEnvio.Add(historial);
        await _context.SaveChangesAsync();

        return new HistorialEnvioQueryDto
        {
            Id = historial.Id,
            NumeroSeguimiento = historial.NumeroSeguimiento,
            SucursalId = historial.SucursalId,
            EstadoEnvio = historial.EstadoEnvio,
            FechaCambio = historial.FechaCambio,
            FechaCreacion = historial.FechaCreacion
        };
    }

    public async Task<HistorialEnvioQueryDto> UpdateHistorialEnvioAsync(Guid id, HistorialEnvioCommandDto historialDto)
    {
        var historial = await _context.HistorialesEnvio.FindAsync(id);
        if (historial == null) return null;

        historial.NumeroSeguimiento = historialDto.NumeroSeguimiento;
        historial.SucursalId = historialDto.SucursalId;
        historial.EstadoEnvio = historialDto.EstadoEnvio;
        historial.FechaCambio = historialDto.FechaCambio;
        historial.FechaCreacion = historialDto.FechaCreacion;

        await _context.SaveChangesAsync();

        return new HistorialEnvioQueryDto
        {
            Id = historial.Id,
            NumeroSeguimiento = historial.NumeroSeguimiento,
            SucursalId = historial.SucursalId,
            EstadoEnvio = historial.EstadoEnvio,
            FechaCambio = historial.FechaCambio,
            FechaCreacion = historial.FechaCreacion
        };
    }

    public async Task<bool> DeleteHistorialEnvioAsync(Guid id)
    {
        var historial = await _context.HistorialesEnvio.FindAsync(id);
        if (historial == null) return false;

        _context.HistorialesEnvio.Remove(historial);
        await _context.SaveChangesAsync();

        return true;
    }
}
}
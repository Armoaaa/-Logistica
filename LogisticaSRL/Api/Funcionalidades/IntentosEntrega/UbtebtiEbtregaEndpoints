using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using LogisticaSRL.Persistencia;
using LogisticaSRL.Dominio;

namespace Api.Funcionalidades
{
    public class IntentoEntregaEndpoints
    {
        private readonly IntentoEntregaService _intentoEntregaService;

        public IntentoEntregaEndpoints(IntentoEntregaService intentoEntregaService)
        {
            _intentoEntregaService = intentoEntregaService;
        }

        public async Task<IActionResult> CreateIntentoEntrega(HttpContext context)
        {
            var intentoDto = await context.Request.ReadFromJsonAsync<IntentoEntregaCommandDto>();
            var result = await _intentoEntregaService.CreateIntentoEntregaAsync(intentoDto);
            return new CreatedAtActionResult(nameof(GetIntentoEntregaById), "IntentoEntrega", new { id = result.Id }, result);
        }

        public async Task<IActionResult> UpdateIntentoEntrega(HttpContext context, Guid id)
        {
            var intentoDto = await context.Request.ReadFromJsonAsync<IntentoEntregaCommandDto>();
            var result = await _intentoEntregaService.UpdateIntentoEntregaAsync(id, intentoDto);
            if (result == null) return new NotFoundResult();

            return new OkObjectResult(result);
        }

        public async Task<IActionResult> DeleteIntentoEntrega(HttpContext context, Guid id)
        {
            var success = await _intentoEntregaService.DeleteIntentoEntregaAsync(id);
            if (!success) return new NotFoundResult();

            return new NoContentResult();
        }

        public async Task<IActionResult> GetIntentoEntregaById(HttpContext context, Guid id)
        {
            var result = await _intentoEntregaService.GetIntentoEntregaByIdAsync(id);
            if (result == null) return new NotFoundResult();

            return new OkObjectResult(result);
        }
    }
}
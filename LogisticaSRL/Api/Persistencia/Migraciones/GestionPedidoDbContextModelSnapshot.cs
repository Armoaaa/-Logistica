// <auto-generated />
using System;
using Api.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Persistencia.Migraciones
{
    [DbContext(typeof(GestionPedidoDbContext))]
    partial class GestionPedidoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Biblioteca.Dominio.Central", b =>
                {
                    b.Property<int>("IdCentral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCentral");

                    b.HasIndex("DomicilioId");

                    b.ToTable("Centrales");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Domicilio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Envio", b =>
                {
                    b.Property<int>("NumeroSeguimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CentralDespachoId")
                        .HasColumnType("int");

                    b.Property<int>("CentralDestinoId")
                        .HasColumnType("int");

                    b.Property<string>("Dimensiones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPersonaEmisora")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonaReceptora")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SucursalDespachoId")
                        .HasColumnType("int");

                    b.Property<int>("SucursalDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("estadoEnvio")
                        .HasColumnType("int");

                    b.Property<int>("personaEmisoraIdPersona")
                        .HasColumnType("int");

                    b.Property<int>("personaReceptoraIdPersona")
                        .HasColumnType("int");

                    b.HasKey("NumeroSeguimiento");

                    b.HasIndex("CentralDespachoId");

                    b.HasIndex("CentralDestinoId");

                    b.HasIndex("SucursalDespachoId");

                    b.HasIndex("SucursalDestinoId");

                    b.HasIndex("personaEmisoraIdPersona");

                    b.HasIndex("personaReceptoraIdPersona");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("Biblioteca.Dominio.HistorialEnvio", b =>
                {
                    b.Property<int>("IdHistorialEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroSeguimiento")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<int>("envioNumeroSeguimiento")
                        .HasColumnType("int");

                    b.Property<int>("estadoEnvio")
                        .HasColumnType("int");

                    b.HasKey("IdHistorialEnvio");

                    b.HasIndex("SucursalId");

                    b.HasIndex("envioNumeroSeguimiento");

                    b.ToTable("HistorialesEnvio");
                });

            modelBuilder.Entity("Biblioteca.Dominio.IntentoEntrega", b =>
                {
                    b.Property<int>("IdIntentoEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Entregado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EnvioNumeroSeguimiento")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIntento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroIntento")
                        .HasColumnType("int");

                    b.Property<int>("NumeroSeguimiento")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.HasKey("IdIntentoEntrega");

                    b.HasIndex("EnvioNumeroSeguimiento");

                    b.HasIndex("SucursalId");

                    b.ToTable("IntentosEntrega");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaisResidente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoDNIId")
                        .HasColumnType("int");

                    b.HasKey("IdPersona");

                    b.HasIndex("DomicilioId");

                    b.HasIndex("TipoDNIId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Sucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CentralIdCentral")
                        .HasColumnType("int");

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<int>("IdCentral")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroS")
                        .HasColumnType("int");

                    b.HasKey("IdSucursal");

                    b.HasIndex("CentralIdCentral");

                    b.HasIndex("DomicilioId");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("Biblioteca.Dominio.TipoDNI", b =>
                {
                    b.Property<int>("IdTipoDni")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DNIextranjero")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdTipoDni");

                    b.ToTable("TipoDNI");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Central", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Domicilio", "domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("domicilio");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Envio", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Central", "centralDespacho")
                        .WithMany()
                        .HasForeignKey("CentralDespachoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Central", "centralDestino")
                        .WithMany()
                        .HasForeignKey("CentralDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Sucursal", "sucursalDespacho")
                        .WithMany()
                        .HasForeignKey("SucursalDespachoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Sucursal", "sucursalDestino")
                        .WithMany()
                        .HasForeignKey("SucursalDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Persona", "personaEmisora")
                        .WithMany()
                        .HasForeignKey("personaEmisoraIdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Persona", "personaReceptora")
                        .WithMany()
                        .HasForeignKey("personaReceptoraIdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("centralDespacho");

                    b.Navigation("centralDestino");

                    b.Navigation("personaEmisora");

                    b.Navigation("personaReceptora");

                    b.Navigation("sucursalDespacho");

                    b.Navigation("sucursalDestino");
                });

            modelBuilder.Entity("Biblioteca.Dominio.HistorialEnvio", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Sucursal", "sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Envio", "envio")
                        .WithMany("Historiales")
                        .HasForeignKey("envioNumeroSeguimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("envio");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("Biblioteca.Dominio.IntentoEntrega", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Envio", "Envio")
                        .WithMany()
                        .HasForeignKey("EnvioNumeroSeguimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Sucursal", "sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Envio");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Persona", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Domicilio", "domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.TipoDNI", "TipoDNI")
                        .WithMany()
                        .HasForeignKey("TipoDNIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDNI");

                    b.Navigation("domicilio");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Sucursal", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Central", "Central")
                        .WithMany("Sucursales")
                        .HasForeignKey("CentralIdCentral")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Dominio.Domicilio", "domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Central");

                    b.Navigation("domicilio");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Central", b =>
                {
                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Envio", b =>
                {
                    b.Navigation("Historiales");
                });
#pragma warning restore 612, 618
        }
    }
}
